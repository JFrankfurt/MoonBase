{"version":3,"file":"0.js","sources":["webpack:///./game/index.tsx","webpack:///./game/scenes/BootScene.ts","webpack:///./game/scenes/LeaderBoard.ts","webpack:///./game/scenes/Level.ts","webpack:///./game/scenes/MainMenu.ts","webpack:///./game/scenes/index.ts"],"sourcesContent":["import {CANVAS, Game} from 'phaser'\r\nimport React, {Component} from 'react'\r\nimport {BootScene, LeaderBoard, Level, MainMenu} from './scenes'\r\n\r\nconst config = (canvas: HTMLCanvasElement) => ({\r\n  canvas,\r\n  type: CANVAS,\r\n  width: 800,\r\n  height: 600,\r\n  physics: {\r\n    default: 'arcade',\r\n    arcade: {\r\n      gravity: {y: 0},\r\n    },\r\n  },\r\n  scene: [\r\n    BootScene,\r\n    MainMenu,\r\n    Level,\r\n    LeaderBoard,\r\n  ],\r\n})\r\n\r\nexport default class extends Component<any, any> {\r\n  private canvasRef: HTMLCanvasElement | null\r\n\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.canvasRef = null\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const game = new Game(config(this.canvasRef as HTMLCanvasElement))\r\n    console.log(game)\r\n  }\r\n\r\n  public render() {\r\n    return <canvas ref={el => this.canvasRef = el}/>\r\n  }\r\n}\r\n","import {Scene} from 'phaser'\r\n\r\nexport default class BootScene extends Scene {\r\n  constructor(args: any) {\r\n    super(args)\r\n    Scene.call(this, {key: 'BootScene'})\r\n  }\r\n\r\n  public preload() {\r\n    this.load.multiatlas('spriteSheet', '/static/game/SpriteSheet.json')\r\n    this.load.image('bullet', '/static/game/bitcoinMini.png')\r\n    this.load.image('enemyBullet', '/static/game/enemyBullet.jpg')\r\n    this.load.image('background', '/static/game/background.png')\r\n    this.load.image('start', '/static/game/greyButton.png')\r\n    this.load.audio('InvaderBullet', '/static/game/InvaderBullet.wav')\r\n    this.load.audio('InvaderHit', '/static/game/InvaderHit.wav')\r\n    this.load.audio('playerHit', '/static/game/ShipHit.wav')\r\n    this.load.audio('gameMusic', '/static/game/background.mp3')\r\n  }\r\n\r\n  public create() {\r\n    this.scene.start('MainMenu')\r\n  }\r\n}\r\n","import {Scene} from 'phaser'\r\n\r\nexport default class LeaderBoard extends Scene {\r\n  constructor(args) {\r\n    super(args)\r\n    Scene.call(this, {key: 'LeaderBoard'})\r\n  }\r\n\r\n  public initialize() {\r\n\r\n  }\r\n\r\n  public preload() {\r\n\r\n  }\r\n\r\n  public create() {\r\n\r\n  }\r\n}\r\n","import {Scene} from 'phaser'\r\n\r\nexport default class Level extends Scene {\r\n  constructor(args) {\r\n    super(args)\r\n    Scene.call(this, {key: 'Level'})\r\n  }\r\n\r\n  public preload() {\r\n\r\n  }\r\n\r\n  public create() {\r\n\r\n  }\r\n}\r\n\r\n","import {Scene} from 'phaser'\r\n\r\nexport default class MainMenu extends Scene {\r\n  constructor(args: any) {\r\n    super(args)\r\n    Scene.call(this, {key: 'MainMenu'})\r\n  }\r\n\r\n  public initialize() {\r\n\r\n  }\r\n\r\n  public preload() {\r\n\r\n  }\r\n\r\n  public create() {\r\n    \r\n  }\r\n}\r\n","import BootScene from './BootScene'\r\nimport LeaderBoard from './LeaderBoard'\r\nimport Level from './Level'\r\nimport MainMenu from './MainMenu'\r\n\r\nexport {\r\n  BootScene,\r\n  LeaderBoard,\r\n  Level,\r\n  MainMenu,\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAFA;AAMA;AAXA;AAAA;AACA;;;;;;AAqBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAfA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AApBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;;;AAIA;;;AAIA;;;;AAdA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;;;AAIA;;;;AAVA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;;;AAIA;;;AAIA;;;;AAdA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;A","sourceRoot":""}